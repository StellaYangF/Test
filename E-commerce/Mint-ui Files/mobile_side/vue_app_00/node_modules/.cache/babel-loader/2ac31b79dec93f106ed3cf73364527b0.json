{"remainingRequest":"c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00\\src\\main.js","dependencies":[{"path":"c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00\\src\\main.js","mtime":1551845799669},{"path":"c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport 'mint-ui/lib/style.css'; // axios1:引入库\n\nimport axios from 'axios';\nVue.config.productionTip = false; // axios2:配置跨域选项\n\naxios.defaults.withCredentials = true; // axios3:库作为实例对象Vue的圆形对象的方法\n\nVue.prototype.axios = axios; // axios4:使用在子组件的script中\n//5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; // 1:引入Header，Button组件(区别于引入axios，因其需要引入整个axios库)\n\nimport { Header, Button, Tabbar } from \"mint-ui\"; // 2:注册Header组件\n\nVue.component(Header.name, Header);\nVue.component(Button.name, Button);\nVue.component(Tabbar.name, Tabbar);\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","axios","config","productionTip","defaults","withCredentials","prototype","Header","Button","Tabbar","component","name","render","h","$mount"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAM,uBAAN,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAH,IAAII,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CAEA;;AACAF,MAAMG,QAAN,CAAeC,eAAf,GAA+B,IAA/B,C,CAEA;;AACAP,IAAIQ,SAAJ,CAAcL,KAAd,GAAoBA,KAApB,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP,C,CAEA;;AAEA,SAAQM,MAAR,EAAeC,MAAf,EAAsBC,MAAtB,QAAmC,SAAnC,C,CACA;;AACAX,IAAIY,SAAJ,CAAcH,OAAOI,IAArB,EAA0BJ,MAA1B;AACAT,IAAIY,SAAJ,CAAcF,OAAOG,IAArB,EAA0BH,MAA1B;AACAV,IAAIY,SAAJ,CAAcD,OAAOE,IAArB,EAA0BF,MAA1B;AACA,IAAIX,GAAJ,CAAQ;AACNE,gBADM;AAENY,UAAQ;AAAA,WAAKC,EAAEd,GAAF,CAAL;AAAA;AAFF,CAAR,EAGGe,MAHH,CAGU,MAHV","sourceRoot":"c:\\Users\\Tedu\\Desktop\\Web_Course\\000PROJECT\\Test\\E-commerce\\Mint-ui Files\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport'mint-ui/lib/style.css'\r\n\r\n// axios1:引入库\r\nimport axios from 'axios'\r\n\r\nVue.config.productionTip = false\r\n\r\n// axios2:配置跨域选项\r\naxios.defaults.withCredentials=true;\r\n\r\n// axios3:库作为实例对象Vue的圆形对象的方法\r\nVue.prototype.axios=axios;\r\n\r\n// axios4:使用在子组件的script中\r\n\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n// 1:引入Header，Button组件(区别于引入axios，因其需要引入整个axios库)\r\n\r\nimport {Header,Button,Tabbar} from \"mint-ui\"\r\n// 2:注册Header组件\r\nVue.component(Header.name,Header)\r\nVue.component(Button.name,Button)\r\nVue.component(Tabbar.name,Tabbar)\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"]}]}