{"remainingRequest":"c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\src\\components\\home\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\src\\components\\home\\ShopCart.vue","mtime":1552388305396},{"path":"c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\Tedu\\Desktop\\WEB COURSE\\05 WEB_COURSE\\13 VUEUI\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Toast } from \"mint-ui\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //购物车列表\n      allcb: false //全选状态 默认未选中\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    loadMore: function loadMore() {\n      var _this = this;\n\n      this.axios.get(\"http://localhost:3000/getShopCart\").then(function (res) {\n        // 复选狂的对象\n        // this.list = res.data.data;\n        var list = res.data.data; // 遍历返回的结果数组，并给每一个对象添加属性cb（CheckBox:false）\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = list;\n      });\n    },\n    removeItem: function removeItem(e) {\n      var _this2 = this;\n\n      var answer = confirm(\"Are you sure to remove the product?\");\n\n      if (answer) {\n        var id = e.target.dataset.id;\n        var i = e.target.dataset.idx;\n        this.axios.post(\"http://localhost:3000/removeItem\", \"id=\".concat(id)).then(function (res) {\n          /*method one more efficent*/\n          _this2.list.splice(i, 1);\n          /* method two*/\n          // this.loadMore();\n\n\n          Toast(res.data.msg);\n        });\n      }\n    },\n    // 删除选中的多个商品\n    removeMItem: function removeMItem() {\n      var _this3 = this;\n\n      // 准备一个空数组 或者字符串均可\n\n      /* 方法一：数组*/\n\n      /* var idlist = [];\r\n      // 遍历得出复选框选中的所有列\r\n      for (var item of this.list) {\r\n        if (item.cb) {\r\n          idlist.push(item.id);\r\n        }\r\n      }\r\n      var ids=idlist.join(\",\");*/\n\n      /*方法二：空字符串 */\n      var ids = \"\";\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.cb) {\n            ids += item.id + \",\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (ids.length == 0) {\n        Toast(\"请选中您要删除的商品！\");\n        return;\n      } // ids.length-1截取最后的\",\"\"\n\n\n      ids = ids.substring(0, ids.length - 1);\n      console.log(ids); // send request\n\n      this.axios.get(\"http://localhost:3000/removeMItem?ids=\".concat(ids)).then(function (res) {\n        Toast(res.data.msg);\n\n        _this3.loadMore();\n      });\n    },\n    // 商品复选框点击事假\n    modifyItem: function modifyItem(e) {\n      // 1.获取当前元素选中状态true fasle\n      var rs = e.target.checked; // 2.当前元素在数组中下标\n\n      var i = e.target.dataset.i; // 3.将状态赋值当前数组下标中对象cb值\n\n      this.list[i].cb = rs; // 4. 判断全选复选框的状态 true false\n      // 4.1 获取数组个数\n\n      var size1 = this.list.length;\n      var size2 = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          // 4.2 计算数组中cb true个数\n          if (item.cb) {\n            size2++;\n          }\n        } // 4.3 数组个数==cb true个数\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (size1 == size2) {\n        // 4.4 将allcb=true\n        this.allcb = true;\n      } else {\n        // 4.5 否则allcb=false\n        this.allcb = false;\n      }\n    },\n    // 全选复选框绑定事件\n    slcAll: function slcAll(e) {\n      // 1. 获取全选按钮选中状态\n      var rs = e.target.checked; // 2. 遍历数据所有元素\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n          // 3. 修改item.cb=全选状态\n          item.cb = rs;\n        } // 4. 全选复选框根据商品复选框变动而变动\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this.allcb = rs;\n    }\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-shopcart\">\r\n    <mt-header title=\"Shopping Cart\" fixed class=\"mt-header\"></mt-header>\r\n    <div class=\"mui-card\">\r\n      <div class=\"mui-card-header\">\r\n        <input type=\"checkbox\" @click=\"slcAll\" :checked=\"allcb\">全选\r\n      </div>\r\n      <div class=\"mui-card-content\">\r\n        <div class=\"mui-card-content-inner\">\r\n          <!-- 商品信息的开始 -->\r\n          <ul class=\"mui-table-view\">\r\n            <li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) of list\">\r\n              <a href=\"javascript:;\">\r\n                <div class=\"mui-media-body\">\r\n                  <p class=\"mui-ellipsis\">\r\n                    <span>\r\n                      <!-- 商品前复选狂 -->\r\n                      <!-- 双向绑定复选框checked的属性值为商品遍历时追加的cb -->\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        :data-id=\"item.id\"\r\n                        :data-i=\"i\"\r\n                        @click=\"modifyItem\"\r\n                        :checked=\"item.cb\"\r\n                      >\r\n                      {{item.pname}} ¥{{item.price.toFixed(2)}}\r\n                    </span>\r\n                    <span>\r\n                      <button @click=\"removeItem\" :data-id=\"item.id\" :data-idx=\"i\">Delete</button>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <!-- 商品信息的结束 -->\r\n        </div>\r\n      </div>\r\n      <div class=\"mui-card-footer\">\r\n        <button @click=\"removeMItem\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Toast } from \"mint-ui\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [], //购物车列表\r\n      allcb: false //全选状态 默认未选中\r\n    };\r\n  },\r\n  created() {\r\n    this.loadMore();\r\n  },\r\n\r\n  methods: {\r\n    loadMore() {\r\n      this.axios.get(\"http://localhost:3000/getShopCart\").then(res => {\r\n        // 复选狂的对象\r\n        // this.list = res.data.data;\r\n        var list = res.data.data;\r\n        // 遍历返回的结果数组，并给每一个对象添加属性cb（CheckBox:false）\r\n        for (var item of list) {\r\n          item.cb = false;\r\n        }\r\n        this.list = list;\r\n      });\r\n    },\r\n\r\n    removeItem(e) {\r\n      var answer = confirm(\"Are you sure to remove the product?\");\r\n      if (answer) {\r\n        var id = e.target.dataset.id;\r\n        var i = e.target.dataset.idx;\r\n        this.axios\r\n          .post(\"http://localhost:3000/removeItem\", `id=${id}`)\r\n          .then(res => {\r\n            /*method one more efficent*/\r\n            this.list.splice(i, 1);\r\n            /* method two*/\r\n            // this.loadMore();\r\n            Toast(res.data.msg);\r\n          });\r\n      }\r\n    },\r\n\r\n    // 删除选中的多个商品\r\n    removeMItem() {\r\n      // 准备一个空数组 或者字符串均可\r\n      /* 方法一：数组*/\r\n      /* var idlist = [];\r\n      // 遍历得出复选框选中的所有列\r\n      for (var item of this.list) {\r\n        if (item.cb) {\r\n          idlist.push(item.id);\r\n        }\r\n      }\r\n      var ids=idlist.join(\",\");*/\r\n\r\n      /*方法二：空字符串 */\r\n      var ids = \"\";\r\n      for (var item of this.list) {\r\n        if (item.cb) {\r\n          ids += item.id + \",\";\r\n        }\r\n      }\r\n      if (ids.length == 0) {\r\n        Toast(\"请选中您要删除的商品！\");\r\n        return;\r\n      }\r\n      // ids.length-1截取最后的\",\"\"\r\n      ids = ids.substring(0, ids.length - 1);\r\n      console.log(ids);\r\n      // send request\r\n      this.axios\r\n        .get(`http://localhost:3000/removeMItem?ids=${ids}`)\r\n        .then(res => {\r\n          Toast(res.data.msg);\r\n          this.loadMore();\r\n        });\r\n    },\r\n\r\n    // 商品复选框点击事假\r\n    modifyItem(e) {\r\n      // 1.获取当前元素选中状态true fasle\r\n      var rs = e.target.checked;\r\n      // 2.当前元素在数组中下标\r\n      var i = e.target.dataset.i;\r\n      // 3.将状态赋值当前数组下标中对象cb值\r\n      this.list[i].cb = rs;\r\n\r\n      // 4. 判断全选复选框的状态 true false\r\n      // 4.1 获取数组个数\r\n      var size1 = this.list.length;\r\n      var size2 = 0;\r\n      for (var item of this.list) {\r\n        // 4.2 计算数组中cb true个数\r\n        if (item.cb) {\r\n          size2++;\r\n        }\r\n      }\r\n      // 4.3 数组个数==cb true个数\r\n      if (size1 == size2) {\r\n        // 4.4 将allcb=true\r\n        this.allcb = true;\r\n      } else {\r\n        // 4.5 否则allcb=false\r\n        this.allcb = false;\r\n      }\r\n    },\r\n\r\n    // 全选复选框绑定事件\r\n    slcAll(e) {\r\n      // 1. 获取全选按钮选中状态\r\n      var rs = e.target.checked;\r\n      // 2. 遍历数据所有元素\r\n      for (var item of this.list) {\r\n        // 3. 修改item.cb=全选状态\r\n        item.cb = rs;\r\n      }\r\n      // 4. 全选复选框根据商品复选框变动而变动\r\n      this.allcb = rs;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.mt-header{\r\n  background:#EF5BA1;\r\n}\r\n.mui-ellipsis {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.mui-card-header {\r\n  justify-content: flex-start;\r\n}\r\n.mui-table-view>li:nth-child(even){\r\n  background:rgba(196, 196, 196, 0.301);\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components\\home"}]}